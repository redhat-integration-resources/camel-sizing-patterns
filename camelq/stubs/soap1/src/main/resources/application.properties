## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# quarkus.banner.enabled = false

# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
quarkus.kubernetes-client.trust-certs=true

# ImagePullPolicy to use
quarkus.openshift.image-pull-policy=IfNotPresent


#
# Camel
#
camel.context.name = quarkus-camel-s1

#
# Camel Main
#
camel.main.routes-include-pattern= classpath:routes/s1.xml

# For dev mode
quarkus.live-reload.watched-resources = routes/s1.xml

# This property will not be needed from Quarkus 3.x onwards.
# Its default value will be /services
quarkus.cxf.path = /services

# Auto-generates classes from WSDL
quarkus.cxf.codegen.wsdl2java.foo-params.includes = wsdl/*

# Running on port (9000 for local testing)
quarkus.http.port=8080
%dev.quarkus.http.port=9000

# It seems there was a regression.
#  - ref: https://github.com/quarkusio/quarkus/issues/16089
# Service port now defaults to 80, but previously defaulted to http port
# The following parameters configure the service ports 
quarkus.openshift.ports.http.name=http
quarkus.openshift.ports.http.host-port=8080
quarkus.openshift.ports.http.container-port=8080
